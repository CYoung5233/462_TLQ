import pandas as pd
import numpy as np
import json
import os
import boto3
import ast

lastHash = ""
client = boto3.client('lambda')
    
def interactive_preprocess():
    data = None
    with open("interactive.ipynb") as f_in:
        data = json.load(f_in)
    
    sourceLines = data['cells'][3]['source']
    
    string = ""
    with open('handler.py', 'w') as handler:
        handler.write("# Generated by Interactive Notebook - ")
        for line in sourceLines:
            handler.write(line)
            string += line
    handler.close()
    
    test = hash(string)
    global lastHash
    if (lastHash == test):
        print("No changes detected. Make sure to save the notebook!")
        return None
    lastHash = test
    
    print("Deploying function...")
    os.system("../deploy/publish.sh 1 0 0 0 512")
    print("Function deployed!")
    
def run_on_cloud(payload):
    response = client.invoke(
        FunctionName = 'hello',
        InvocationType='RequestResponse',
        Payload=json.dumps(payload)
    )
    if 'Payload' in response:
        stream = response['Payload']
        data = ast.literal_eval(stream.read().decode("UTF-8"))
        
        frame = {
            'Attribute': list(data.keys()),
            'Value': list(data.values())
        }
        return pd.DataFrame.from_dict(frame)
    else:
        print(str(response))